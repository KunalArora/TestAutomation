// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Brother.Tests.Specs.TestSpecifications.MPS2.Admin
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Type1DealerAdminCapabilities")]
    [NUnit.Framework.CategoryAttribute("MPS")]
    [NUnit.Framework.CategoryAttribute("UAT")]
    [NUnit.Framework.CategoryAttribute("TEST")]
    [NUnit.Framework.CategoryAttribute("TYPE1")]
    [NUnit.Framework.CategoryAttribute("LOW")]
    [NUnit.Framework.CategoryAttribute("ADMIN")]
    [NUnit.Framework.CategoryAttribute("CI_TestMaintenance")]
    public partial class Type1DealerAdminCapabilitiesFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Type1DealerAdminCapabilities.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Type1DealerAdminCapabilities", "\tIn order to test the Cloud MPS dealer Admin capabilities\r\n\tVerify the dealership" +
                    " profile and dealer default margin functionality\r\n\thttps://brother-bie.atlassian" +
                    ".net/browse/MPS-5269", ProgrammingLanguage.CSharp, new string[] {
                        "MPS",
                        "UAT",
                        "TEST",
                        "TYPE1",
                        "LOW",
                        "ADMIN",
                        "CI_TestMaintenance"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Type1DealerAdminCapabilities")]
        [NUnit.Framework.TestCaseAttribute("United Kingdom", "11.01", "22.02", "33.03", "44.04", "55.05", "66.06", "77.07", new string[] {
                "BUK"}, Category="BUK")]
        public virtual void Type1DealerAdminCapabilities(string country, string hardwareDefaultMargin, string accessoriesDefaultMargin, string deliveryDefaultMargin, string installationDefaultMargin, string servicePackDefaultMargin, string monoClickDefaultCommission, string colourClickDefaultCommission, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Type1DealerAdminCapabilities", exampleTags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
testRunner.Given(string.Format("Country is \"{0}\"", country), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
testRunner.Given("I select Admin menu and click on Default Margins", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
testRunner.Then("I will be taken into the Default Margins tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 12
testRunner.When(string.Format(@"I overtype default margins HardwareDefaultMargin of ""{0}"", AccessoriesDefaultMargin of ""{1}"", DeliveryDefaultMargin of ""{2}"", InstallationDefaultMargin of ""{3}"", ServicePackDefaultMargin of ""{4}"", MonoClickDefaultCommission of ""{5}"", and ColourClickDefaultCommission of ""{6}""  with required % and click Save", hardwareDefaultMargin, accessoriesDefaultMargin, deliveryDefaultMargin, installationDefaultMargin, servicePackDefaultMargin, monoClickDefaultCommission, colourClickDefaultCommission), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Model",
                        "Price",
                        "LowerTrayPrice",
                        "InstallationPack",
                        "Delivery",
                        "CoverageMono",
                        "VolumeMono",
                        "CoverageColour",
                        "VolumeColour"});
            table1.AddRow(new string[] {
                        "DCP-L8450CDW",
                        "1000.00",
                        "1000.00",
                        "BROTHER_INSTALLATION",
                        "Yes",
                        "5",
                        "1000",
                        "20",
                        "250"});
#line 13
testRunner.Then("I verify default margins will be amended", ((string)(null)), table1, "Then ");
#line 18
testRunner.Given("I select Admin menu and click on Delearship Profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
testRunner.Then("I will be taken into the Dealership Profile tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 20
testRunner.When("I amend Profile description and use the browse function to add a Jpeg as a logo, " +
                    "Click Save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
testRunner.Then("I can verify that dealership profile was updated successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
