// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Brother.Tests.Specs.TestSpecifications.MPSTwoByCountries.BIEPC111.CustomerRegression
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CloudMPSEditCustomerForAllCountries")]
    [NUnit.Framework.CategoryAttribute("MPS")]
    [NUnit.Framework.CategoryAttribute("UAT")]
    [NUnit.Framework.CategoryAttribute("TEST")]
    [NUnit.Framework.CategoryAttribute("BIEPC113")]
    public partial class CloudMPSEditCustomerForAllCountriesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CloudMPSEditCustomerForAllCountries.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CloudMPSEditCustomerForAllCountries", "In order to avoid silly mistakes\r\nAs a math idiot\r\nI want to be told the sum of t" +
                    "wo numbers", ProgrammingLanguage.CSharp, new string[] {
                        "MPS",
                        "UAT",
                        "TEST",
                        "BIEPC113"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MPS Edit New Customer for All Countries")]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "United Kingdom", "NewlyCreatedItem", "Invoice", "Direct Debit", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "United Kingdom", "NewlyCreatedItem", "Direct Debit", "Invoice", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Italy", "NewlyCreatedItem", "Addebito diretto", "Fattura", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Italy", "NewlyCreatedItem", "Fattura", "Addebito diretto", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Norway", "NewlyCreatedItem", "Faktura", "Fast trekk", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Norway", "NewlyCreatedItem", "Fast trekk", "Faktura", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Finland", "NewlyCreatedItem", "Laskutus", "Laskutus", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Sweden", "NewlyCreatedItem", "Faktura", "Faktura", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Germany", "NewlyCreatedItem", "Bankeinzug", "Rechnung", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Germany", "NewlyCreatedItem", "Rechnung", "Bankeinzug", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Poland", "NewlyCreatedItem", "Faktura", "Faktura", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Ireland", "NewlyCreatedItem", "Direct Debit", "Government PAYE only", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Ireland", "NewlyCreatedItem", "Government PAYE only", "Direct Debit", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Netherlands", "NewlyCreatedItem", "Automatische incasso", "Automatische incasso", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "France", "NewlyCreatedItem", "Débit direct", "Facture", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "France", "NewlyCreatedItem", "Facture", "Débit direct", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Spain", "NewlyCreatedItem", "Debito directo", "Factura", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Spain", "NewlyCreatedItem", "Factura", "Debito directo", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Denmark", "NewlyCreatedItem", "Faktura", "Faktura", null)]
        public virtual void MPSEditNewCustomerForAllCountries(string role, string country, string targetItem, string paymentType, string paymentType2, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MPS Edit New Customer for All Countries", exampleTags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given(string.Format("I sign into Cloud MPS as a \"{0}\" from \"{1}\"", role, country), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.And("I navigate to existing customer screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And("I click Create Customer Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.When(string.Format("I create new Customer with payment type \"{0}\" for \"{1}\"", paymentType, country), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.And(string.Format("I click the edit button against \"{0}\" on Exisiting Customers table", targetItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And(string.Format("I edit \"{0}\" customer payment type to \"{1}\"", country, paymentType2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.Then("I can see the edited Customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 15
 testRunner.And(string.Format("I click the edit button against \"{0}\" on Exisiting Customers table", targetItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.And("I can confirm the edited Customer in detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.And("I can verify that payment details are displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("I can sign out of Brother Online", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MPS Edit New Customer for Multiple Languages")]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Belgium", "NewlyCreatedItem", "Facture", "Domiciliation", "Français", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Belgium", "NewlyCreatedItem", "Domiciliëring", "Factuur", "Nederlands", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Switzerland", "NewlyCreatedItem", "LSV", "Rechnung", "Deutsch", null)]
        [NUnit.Framework.TestCaseAttribute("Cloud MPS Dealer", "Switzerland", "NewlyCreatedItem", "Facture", "Prélèvement automatique", "Français", null)]
        public virtual void MPSEditNewCustomerForMultipleLanguages(string role, string country, string targetItem, string paymentType, string paymentType2, string culture, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MPS Edit New Customer for Multiple Languages", exampleTags);
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
 testRunner.Given(string.Format("I sign into Cloud MPS as a \"{0}\" from \"{1}\"", role, country), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 45
 testRunner.And(string.Format("I changed the language to \"{0}\"", culture), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
 testRunner.And("I navigate to existing customer screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.And("I click Create Customer Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.When(string.Format("I create new \"{0}\" Customer with payment type \"{1}\" for \"{2}\"", culture, paymentType, country), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 49
 testRunner.And(string.Format("I click the edit button against \"{0}\" on Exisiting Customers table", targetItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.And(string.Format("I edit \"{0}\" customer payment type to \"{1}\"", country, paymentType2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.Then("I can see the edited Customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 52
 testRunner.And(string.Format("I click the edit button against \"{0}\" on Exisiting Customers table", targetItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
 testRunner.And("I can confirm the edited Customer in detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.And("I can verify that payment details are displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.And("I can sign out of Brother Online", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
