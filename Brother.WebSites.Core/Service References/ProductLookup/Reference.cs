//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Brother.WebSites.Core.ProductLookup {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SerialNumberLookupResponse", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product.Response")]
    [System.SerializableAttribute()]
    public partial class SerialNumberLookupResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brother.WebSites.Core.ProductLookup.ModelData[] ModelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brother.WebSites.Core.ProductLookup.ModelData[] Models {
            get {
                return this.ModelsField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelsField, value) != true)) {
                    this.ModelsField = value;
                    this.RaisePropertyChanged("Models");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModelData", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product")]
    [System.SerializableAttribute()]
    public partial class ModelData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPromoAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPromoAvailable {
            get {
                return this.IsPromoAvailableField;
            }
            set {
                if ((this.IsPromoAvailableField.Equals(value) != true)) {
                    this.IsPromoAvailableField = value;
                    this.RaisePropertyChanged("IsPromoAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelNumber {
            get {
                return this.ModelNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelNumberField, value) != true)) {
                    this.ModelNumberField = value;
                    this.RaisePropertyChanged("ModelNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PurchaseDateValidationResponse", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product.Response")]
    [System.SerializableAttribute()]
    public partial class PurchaseDateValidationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WarrantCodeValidationResponse", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product.Response")]
    [System.SerializableAttribute()]
    public partial class WarrantCodeValidationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivationCodeValidationResponse", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product.Response")]
    [System.SerializableAttribute()]
    public partial class ActivationCodeValidationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductSkuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductSku {
            get {
                return this.ProductSkuField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductSkuField, value) != true)) {
                    this.ProductSkuField = value;
                    this.RaisePropertyChanged("ProductSku");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PromocodeValidationResponse", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product.Response")]
    [System.SerializableAttribute()]
    public partial class PromocodeValidationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brother.WebSites.Core.ProductLookup.PromotionType PromoTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brother.WebSites.Core.ProductLookup.PromotionType PromoType {
            get {
                return this.PromoTypeField;
            }
            set {
                if ((this.PromoTypeField.Equals(value) != true)) {
                    this.PromoTypeField = value;
                    this.RaisePropertyChanged("PromoType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PromotionType", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product")]
    public enum PromotionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarrantyUpgrade = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cashback = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FreeProduct = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WarrantyPackLookupResponse", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product.Response")]
    [System.SerializableAttribute()]
    public partial class WarrantyPackLookupResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brother.WebSites.Core.ProductLookup.WarrantyPack[] WarrantyPacksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brother.WebSites.Core.ProductLookup.WarrantyPack[] WarrantyPacks {
            get {
                return this.WarrantyPacksField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyPacksField, value) != true)) {
                    this.WarrantyPacksField = value;
                    this.RaisePropertyChanged("WarrantyPacks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WarrantyPack", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product")]
    [System.SerializableAttribute()]
    public partial class WarrantyPack : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackType {
            get {
                return this.PackTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PackTypeField, value) != true)) {
                    this.PackTypeField = value;
                    this.RaisePropertyChanged("PackType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisteredDevicesLookupResponse", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product.Response")]
    [System.SerializableAttribute()]
    public partial class RegisteredDevicesLookupResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brother.WebSites.Core.ProductLookup.Device[] RegisteredDevicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brother.WebSites.Core.ProductLookup.Device[] RegisteredDevices {
            get {
                return this.RegisteredDevicesField;
            }
            set {
                if ((object.ReferenceEquals(this.RegisteredDevicesField, value) != true)) {
                    this.RegisteredDevicesField = value;
                    this.RaisePropertyChanged("RegisteredDevices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Device", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product")]
    [System.SerializableAttribute()]
    public partial class Device : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExtWarrantyPossibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PromoCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PromoMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brother.WebSites.Core.ProductLookup.PromotionType PromoTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PurchaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurchaseLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesOrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime WarrantyEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime WarrantyStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brother.WebSites.Core.ProductLookup.WarrantyTypes WarrantyTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExtWarrantyPossible {
            get {
                return this.ExtWarrantyPossibleField;
            }
            set {
                if ((this.ExtWarrantyPossibleField.Equals(value) != true)) {
                    this.ExtWarrantyPossibleField = value;
                    this.RaisePropertyChanged("ExtWarrantyPossible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelNumber {
            get {
                return this.ModelNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelNumberField, value) != true)) {
                    this.ModelNumberField = value;
                    this.RaisePropertyChanged("ModelNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductText {
            get {
                return this.ProductTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTextField, value) != true)) {
                    this.ProductTextField = value;
                    this.RaisePropertyChanged("ProductText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PromoCode {
            get {
                return this.PromoCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PromoCodeField, value) != true)) {
                    this.PromoCodeField = value;
                    this.RaisePropertyChanged("PromoCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PromoMaterial {
            get {
                return this.PromoMaterialField;
            }
            set {
                if ((object.ReferenceEquals(this.PromoMaterialField, value) != true)) {
                    this.PromoMaterialField = value;
                    this.RaisePropertyChanged("PromoMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brother.WebSites.Core.ProductLookup.PromotionType PromoType {
            get {
                return this.PromoTypeField;
            }
            set {
                if ((this.PromoTypeField.Equals(value) != true)) {
                    this.PromoTypeField = value;
                    this.RaisePropertyChanged("PromoType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PurchaseDate {
            get {
                return this.PurchaseDateField;
            }
            set {
                if ((this.PurchaseDateField.Equals(value) != true)) {
                    this.PurchaseDateField = value;
                    this.RaisePropertyChanged("PurchaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurchaseLocation {
            get {
                return this.PurchaseLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchaseLocationField, value) != true)) {
                    this.PurchaseLocationField = value;
                    this.RaisePropertyChanged("PurchaseLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesOrg {
            get {
                return this.SalesOrgField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesOrgField, value) != true)) {
                    this.SalesOrgField = value;
                    this.RaisePropertyChanged("SalesOrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime WarrantyEnd {
            get {
                return this.WarrantyEndField;
            }
            set {
                if ((this.WarrantyEndField.Equals(value) != true)) {
                    this.WarrantyEndField = value;
                    this.RaisePropertyChanged("WarrantyEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime WarrantyStart {
            get {
                return this.WarrantyStartField;
            }
            set {
                if ((this.WarrantyStartField.Equals(value) != true)) {
                    this.WarrantyStartField = value;
                    this.RaisePropertyChanged("WarrantyStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarrantyText {
            get {
                return this.WarrantyTextField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyTextField, value) != true)) {
                    this.WarrantyTextField = value;
                    this.RaisePropertyChanged("WarrantyText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brother.WebSites.Core.ProductLookup.WarrantyTypes WarrantyType {
            get {
                return this.WarrantyTypeField;
            }
            set {
                if ((this.WarrantyTypeField.Equals(value) != true)) {
                    this.WarrantyTypeField = value;
                    this.RaisePropertyChanged("WarrantyType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WarrantyTypes", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product")]
    public enum WarrantyTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Standard = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Extended = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expired = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unassigned = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedWarrantyActivationResponse", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product.Response")]
    [System.SerializableAttribute()]
    public partial class ExtendedWarrantyActivationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PromoAvailableResponse", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product.Response")]
    [System.SerializableAttribute()]
    public partial class PromoAvailableResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductLookup.IProductLookupService")]
    public interface IProductLookupService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLookupService/LookupSerialNumber", ReplyAction="http://tempuri.org/IProductLookupService/LookupSerialNumberResponse")]
        Brother.WebSites.Core.ProductLookup.SerialNumberLookupResponse LookupSerialNumber(string serialNumber, string country, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLookupService/LookupSerialNumber", ReplyAction="http://tempuri.org/IProductLookupService/LookupSerialNumberResponse")]
        System.Threading.Tasks.Task<Brother.WebSites.Core.ProductLookup.SerialNumberLookupResponse> LookupSerialNumberAsync(string serialNumber, string country, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLookupService/ValidatePurchaseDate", ReplyAction="http://tempuri.org/IProductLookupService/ValidatePurchaseDateResponse")]
        Brother.WebSites.Core.ProductLookup.PurchaseDateValidationResponse ValidatePurchaseDate(System.Guid productId, System.DateTime purchaseDate, string country, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLookupService/ValidatePurchaseDate", ReplyAction="http://tempuri.org/IProductLookupService/ValidatePurchaseDateResponse")]
        System.Threading.Tasks.Task<Brother.WebSites.Core.ProductLookup.PurchaseDateValidationResponse> ValidatePurchaseDateAsync(System.Guid productId, System.DateTime purchaseDate, string country, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLookupService/ValidateWarrantyPackActivationCode", ReplyAction="http://tempuri.org/IProductLookupService/ValidateWarrantyPackActivationCodeRespon" +
            "se")]
        Brother.WebSites.Core.ProductLookup.WarrantCodeValidationResponse ValidateWarrantyPackActivationCode(System.Guid productId, string code, string packType, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLookupService/ValidateWarrantyPackActivationCode", ReplyAction="http://tempuri.org/IProductLookupService/ValidateWarrantyPackActivationCodeRespon" +
            "se")]
        System.Threading.Tasks.Task<Brother.WebSites.Core.ProductLookup.WarrantCodeValidationResponse> ValidateWarrantyPackActivationCodeAsync(System.Guid productId, string code, string packType, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLookupService/ValidateProductActivationCode", ReplyAction="http://tempuri.org/IProductLookupService/ValidateProductActivationCodeResponse")]
        Brother.WebSites.Core.ProductLookup.ActivationCodeValidationResponse ValidateProductActivationCode(string code, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLookupService/ValidateProductActivationCode", ReplyAction="http://tempuri.org/IProductLookupService/ValidateProductActivationCodeResponse")]
        System.Threading.Tasks.Task<Brother.WebSites.Core.ProductLookup.ActivationCodeValidationResponse> ValidateProductActivationCodeAsync(string code, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLookupService/ValidatePromotionCodeForProduct", ReplyAction="http://tempuri.org/IProductLookupService/ValidatePromotionCodeForProductResponse")]
        Brother.WebSites.Core.ProductLookup.PromocodeValidationResponse ValidatePromotionCodeForProduct(System.Guid productId, string promotionCode, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLookupService/ValidatePromotionCodeForProduct", ReplyAction="http://tempuri.org/IProductLookupService/ValidatePromotionCodeForProductResponse")]
        System.Threading.Tasks.Task<Brother.WebSites.Core.ProductLookup.PromocodeValidationResponse> ValidatePromotionCodeForProductAsync(System.Guid productId, string promotionCode, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLookupService/GetWarrantyPacksForProduct", ReplyAction="http://tempuri.org/IProductLookupService/GetWarrantyPacksForProductResponse")]
        Brother.WebSites.Core.ProductLookup.WarrantyPackLookupResponse GetWarrantyPacksForProduct(System.Guid productId, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLookupService/GetWarrantyPacksForProduct", ReplyAction="http://tempuri.org/IProductLookupService/GetWarrantyPacksForProductResponse")]
        System.Threading.Tasks.Task<Brother.WebSites.Core.ProductLookup.WarrantyPackLookupResponse> GetWarrantyPacksForProductAsync(System.Guid productId, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLookupService/GetRegisteredDevices", ReplyAction="http://tempuri.org/IProductLookupService/GetRegisteredDevicesResponse")]
        Brother.WebSites.Core.ProductLookup.RegisteredDevicesLookupResponse GetRegisteredDevices(string businessPartnerId, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLookupService/GetRegisteredDevices", ReplyAction="http://tempuri.org/IProductLookupService/GetRegisteredDevicesResponse")]
        System.Threading.Tasks.Task<Brother.WebSites.Core.ProductLookup.RegisteredDevicesLookupResponse> GetRegisteredDevicesAsync(string businessPartnerId, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLookupService/ActivateExtendedWarranty", ReplyAction="http://tempuri.org/IProductLookupService/ActivateExtendedWarrantyResponse")]
        Brother.WebSites.Core.ProductLookup.ExtendedWarrantyActivationResponse ActivateExtendedWarranty(System.Guid productId, string country, string warrantyPackType, string warrantyActivationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLookupService/ActivateExtendedWarranty", ReplyAction="http://tempuri.org/IProductLookupService/ActivateExtendedWarrantyResponse")]
        System.Threading.Tasks.Task<Brother.WebSites.Core.ProductLookup.ExtendedWarrantyActivationResponse> ActivateExtendedWarrantyAsync(System.Guid productId, string country, string warrantyPackType, string warrantyActivationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLookupService/IsPromotionAvailableForProduct", ReplyAction="http://tempuri.org/IProductLookupService/IsPromotionAvailableForProductResponse")]
        Brother.WebSites.Core.ProductLookup.PromoAvailableResponse IsPromotionAvailableForProduct(System.Guid productId, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLookupService/IsPromotionAvailableForProduct", ReplyAction="http://tempuri.org/IProductLookupService/IsPromotionAvailableForProductResponse")]
        System.Threading.Tasks.Task<Brother.WebSites.Core.ProductLookup.PromoAvailableResponse> IsPromotionAvailableForProductAsync(System.Guid productId, string country);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductLookupServiceChannel : Brother.WebSites.Core.ProductLookup.IProductLookupService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductLookupServiceClient : System.ServiceModel.ClientBase<Brother.WebSites.Core.ProductLookup.IProductLookupService>, Brother.WebSites.Core.ProductLookup.IProductLookupService {
        
        public ProductLookupServiceClient() {
        }
        
        public ProductLookupServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductLookupServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductLookupServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductLookupServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Brother.WebSites.Core.ProductLookup.SerialNumberLookupResponse LookupSerialNumber(string serialNumber, string country, string language) {
            return base.Channel.LookupSerialNumber(serialNumber, country, language);
        }
        
        public System.Threading.Tasks.Task<Brother.WebSites.Core.ProductLookup.SerialNumberLookupResponse> LookupSerialNumberAsync(string serialNumber, string country, string language) {
            return base.Channel.LookupSerialNumberAsync(serialNumber, country, language);
        }
        
        public Brother.WebSites.Core.ProductLookup.PurchaseDateValidationResponse ValidatePurchaseDate(System.Guid productId, System.DateTime purchaseDate, string country, string language) {
            return base.Channel.ValidatePurchaseDate(productId, purchaseDate, country, language);
        }
        
        public System.Threading.Tasks.Task<Brother.WebSites.Core.ProductLookup.PurchaseDateValidationResponse> ValidatePurchaseDateAsync(System.Guid productId, System.DateTime purchaseDate, string country, string language) {
            return base.Channel.ValidatePurchaseDateAsync(productId, purchaseDate, country, language);
        }
        
        public Brother.WebSites.Core.ProductLookup.WarrantCodeValidationResponse ValidateWarrantyPackActivationCode(System.Guid productId, string code, string packType, string country) {
            return base.Channel.ValidateWarrantyPackActivationCode(productId, code, packType, country);
        }
        
        public System.Threading.Tasks.Task<Brother.WebSites.Core.ProductLookup.WarrantCodeValidationResponse> ValidateWarrantyPackActivationCodeAsync(System.Guid productId, string code, string packType, string country) {
            return base.Channel.ValidateWarrantyPackActivationCodeAsync(productId, code, packType, country);
        }
        
        public Brother.WebSites.Core.ProductLookup.ActivationCodeValidationResponse ValidateProductActivationCode(string code, string country) {
            return base.Channel.ValidateProductActivationCode(code, country);
        }
        
        public System.Threading.Tasks.Task<Brother.WebSites.Core.ProductLookup.ActivationCodeValidationResponse> ValidateProductActivationCodeAsync(string code, string country) {
            return base.Channel.ValidateProductActivationCodeAsync(code, country);
        }
        
        public Brother.WebSites.Core.ProductLookup.PromocodeValidationResponse ValidatePromotionCodeForProduct(System.Guid productId, string promotionCode, string country) {
            return base.Channel.ValidatePromotionCodeForProduct(productId, promotionCode, country);
        }
        
        public System.Threading.Tasks.Task<Brother.WebSites.Core.ProductLookup.PromocodeValidationResponse> ValidatePromotionCodeForProductAsync(System.Guid productId, string promotionCode, string country) {
            return base.Channel.ValidatePromotionCodeForProductAsync(productId, promotionCode, country);
        }
        
        public Brother.WebSites.Core.ProductLookup.WarrantyPackLookupResponse GetWarrantyPacksForProduct(System.Guid productId, string country) {
            return base.Channel.GetWarrantyPacksForProduct(productId, country);
        }
        
        public System.Threading.Tasks.Task<Brother.WebSites.Core.ProductLookup.WarrantyPackLookupResponse> GetWarrantyPacksForProductAsync(System.Guid productId, string country) {
            return base.Channel.GetWarrantyPacksForProductAsync(productId, country);
        }
        
        public Brother.WebSites.Core.ProductLookup.RegisteredDevicesLookupResponse GetRegisteredDevices(string businessPartnerId, string country) {
            return base.Channel.GetRegisteredDevices(businessPartnerId, country);
        }
        
        public System.Threading.Tasks.Task<Brother.WebSites.Core.ProductLookup.RegisteredDevicesLookupResponse> GetRegisteredDevicesAsync(string businessPartnerId, string country) {
            return base.Channel.GetRegisteredDevicesAsync(businessPartnerId, country);
        }
        
        public Brother.WebSites.Core.ProductLookup.ExtendedWarrantyActivationResponse ActivateExtendedWarranty(System.Guid productId, string country, string warrantyPackType, string warrantyActivationCode) {
            return base.Channel.ActivateExtendedWarranty(productId, country, warrantyPackType, warrantyActivationCode);
        }
        
        public System.Threading.Tasks.Task<Brother.WebSites.Core.ProductLookup.ExtendedWarrantyActivationResponse> ActivateExtendedWarrantyAsync(System.Guid productId, string country, string warrantyPackType, string warrantyActivationCode) {
            return base.Channel.ActivateExtendedWarrantyAsync(productId, country, warrantyPackType, warrantyActivationCode);
        }
        
        public Brother.WebSites.Core.ProductLookup.PromoAvailableResponse IsPromotionAvailableForProduct(System.Guid productId, string country) {
            return base.Channel.IsPromotionAvailableForProduct(productId, country);
        }
        
        public System.Threading.Tasks.Task<Brother.WebSites.Core.ProductLookup.PromoAvailableResponse> IsPromotionAvailableForProductAsync(System.Guid productId, string country) {
            return base.Channel.IsPromotionAvailableForProductAsync(productId, country);
        }
    }
}
