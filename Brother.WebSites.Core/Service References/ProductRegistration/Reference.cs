//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Brother.WebSites.Core.ProductRegistration {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultipleProductsRegistrationRequestNewBp", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product.Request")]
    [System.SerializableAttribute()]
    public partial class MultipleProductsRegistrationRequestNewBp : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brother.WebSites.Core.ProductRegistration.BusinessPartner BpDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brother.WebSites.Core.ProductRegistration.MultipleProductsRegisterationRequest MultipleProductsDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brother.WebSites.Core.ProductRegistration.BusinessPartner BpDetails {
            get {
                return this.BpDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.BpDetailsField, value) != true)) {
                    this.BpDetailsField = value;
                    this.RaisePropertyChanged("BpDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brother.WebSites.Core.ProductRegistration.MultipleProductsRegisterationRequest MultipleProductsDetails {
            get {
                return this.MultipleProductsDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.MultipleProductsDetailsField, value) != true)) {
                    this.MultipleProductsDetailsField = value;
                    this.RaisePropertyChanged("MultipleProductsDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessPartner", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.BP")]
    [System.SerializableAttribute()]
    public partial class BusinessPartner : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessSectorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CancellationReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brother.WebSites.Core.ProductRegistration.ContactPerson ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HouseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HouseNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBusinessAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrivacyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationChannelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SapIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Street2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TNCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TrialEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VatNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessSector {
            get {
                return this.BusinessSectorField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessSectorField, value) != true)) {
                    this.BusinessSectorField = value;
                    this.RaisePropertyChanged("BusinessSector");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessSize {
            get {
                return this.BusinessSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessSizeField, value) != true)) {
                    this.BusinessSizeField = value;
                    this.RaisePropertyChanged("BusinessSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CancellationReason {
            get {
                return this.CancellationReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.CancellationReasonField, value) != true)) {
                    this.CancellationReasonField = value;
                    this.RaisePropertyChanged("CancellationReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brother.WebSites.Core.ProductRegistration.ContactPerson Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HouseName {
            get {
                return this.HouseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseNameField, value) != true)) {
                    this.HouseNameField = value;
                    this.RaisePropertyChanged("HouseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HouseNo {
            get {
                return this.HouseNoField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseNoField, value) != true)) {
                    this.HouseNoField = value;
                    this.RaisePropertyChanged("HouseNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBusinessAccount {
            get {
                return this.IsBusinessAccountField;
            }
            set {
                if ((this.IsBusinessAccountField.Equals(value) != true)) {
                    this.IsBusinessAccountField = value;
                    this.RaisePropertyChanged("IsBusinessAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Privacy {
            get {
                return this.PrivacyField;
            }
            set {
                if ((this.PrivacyField.Equals(value) != true)) {
                    this.PrivacyField = value;
                    this.RaisePropertyChanged("Privacy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationChannel {
            get {
                return this.RegistrationChannelField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationChannelField, value) != true)) {
                    this.RegistrationChannelField = value;
                    this.RaisePropertyChanged("RegistrationChannel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SapId {
            get {
                return this.SapIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SapIdField, value) != true)) {
                    this.SapIdField = value;
                    this.RaisePropertyChanged("SapId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street2 {
            get {
                return this.Street2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Street2Field, value) != true)) {
                    this.Street2Field = value;
                    this.RaisePropertyChanged("Street2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TNC {
            get {
                return this.TNCField;
            }
            set {
                if ((this.TNCField.Equals(value) != true)) {
                    this.TNCField = value;
                    this.RaisePropertyChanged("TNC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxNumber {
            get {
                return this.TaxNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxNumberField, value) != true)) {
                    this.TaxNumberField = value;
                    this.RaisePropertyChanged("TaxNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TrialEndDate {
            get {
                return this.TrialEndDateField;
            }
            set {
                if ((this.TrialEndDateField.Equals(value) != true)) {
                    this.TrialEndDateField = value;
                    this.RaisePropertyChanged("TrialEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VatNumber {
            get {
                return this.VatNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VatNumberField, value) != true)) {
                    this.VatNumberField = value;
                    this.RaisePropertyChanged("VatNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultipleProductsRegisterationRequest", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product.Request")]
    [System.SerializableAttribute()]
    public partial class MultipleProductsRegisterationRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessPartnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brother.WebSites.Core.ProductRegistration.DeviceToRegister[] DevicesToRegisterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesOrganisationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessPartnerId {
            get {
                return this.BusinessPartnerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessPartnerIdField, value) != true)) {
                    this.BusinessPartnerIdField = value;
                    this.RaisePropertyChanged("BusinessPartnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brother.WebSites.Core.ProductRegistration.DeviceToRegister[] DevicesToRegister {
            get {
                return this.DevicesToRegisterField;
            }
            set {
                if ((object.ReferenceEquals(this.DevicesToRegisterField, value) != true)) {
                    this.DevicesToRegisterField = value;
                    this.RaisePropertyChanged("DevicesToRegister");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesOrganisation {
            get {
                return this.SalesOrganisationField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesOrganisationField, value) != true)) {
                    this.SalesOrganisationField = value;
                    this.RaisePropertyChanged("SalesOrganisation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactPerson", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.BP")]
    [System.SerializableAttribute()]
    public partial class ContactPerson : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SapIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((this.ContactIdField.Equals(value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SapId {
            get {
                return this.SapIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SapIdField, value) != true)) {
                    this.SapIdField = value;
                    this.RaisePropertyChanged("SapId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceToRegister", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product")]
    [System.SerializableAttribute()]
    public partial class DeviceToRegister : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddExtendedWarrantyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brother.WebSites.Core.ProductRegistration.ExtendedWarrantyDetails ExtendedWarrantyDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PromotionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brother.WebSites.Core.ProductRegistration.PromotionType PromotionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PurchaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SortCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddExtendedWarranty {
            get {
                return this.AddExtendedWarrantyField;
            }
            set {
                if ((this.AddExtendedWarrantyField.Equals(value) != true)) {
                    this.AddExtendedWarrantyField = value;
                    this.RaisePropertyChanged("AddExtendedWarranty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brother.WebSites.Core.ProductRegistration.ExtendedWarrantyDetails ExtendedWarrantyDetails {
            get {
                return this.ExtendedWarrantyDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtendedWarrantyDetailsField, value) != true)) {
                    this.ExtendedWarrantyDetailsField = value;
                    this.RaisePropertyChanged("ExtendedWarrantyDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PromotionCode {
            get {
                return this.PromotionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PromotionCodeField, value) != true)) {
                    this.PromotionCodeField = value;
                    this.RaisePropertyChanged("PromotionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brother.WebSites.Core.ProductRegistration.PromotionType PromotionType {
            get {
                return this.PromotionTypeField;
            }
            set {
                if ((this.PromotionTypeField.Equals(value) != true)) {
                    this.PromotionTypeField = value;
                    this.RaisePropertyChanged("PromotionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PurchaseDate {
            get {
                return this.PurchaseDateField;
            }
            set {
                if ((this.PurchaseDateField.Equals(value) != true)) {
                    this.PurchaseDateField = value;
                    this.RaisePropertyChanged("PurchaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SortCode {
            get {
                return this.SortCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SortCodeField, value) != true)) {
                    this.SortCodeField = value;
                    this.RaisePropertyChanged("SortCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Supplier {
            get {
                return this.SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierField, value) != true)) {
                    this.SupplierField = value;
                    this.RaisePropertyChanged("Supplier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedWarrantyDetails", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product")]
    [System.SerializableAttribute()]
    public partial class ExtendedWarrantyDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brother.WebSites.Core.ProductRegistration.WarrantyPack WarrantyPackField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivationCode {
            get {
                return this.ActivationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivationCodeField, value) != true)) {
                    this.ActivationCodeField = value;
                    this.RaisePropertyChanged("ActivationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brother.WebSites.Core.ProductRegistration.WarrantyPack WarrantyPack {
            get {
                return this.WarrantyPackField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyPackField, value) != true)) {
                    this.WarrantyPackField = value;
                    this.RaisePropertyChanged("WarrantyPack");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PromotionType", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product")]
    public enum PromotionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarrantyUpgrade = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cashback = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FreeProduct = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WarrantyPack", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product")]
    [System.SerializableAttribute()]
    public partial class WarrantyPack : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackType {
            get {
                return this.PackTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PackTypeField, value) != true)) {
                    this.PackTypeField = value;
                    this.RaisePropertyChanged("PackType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductRegistrationRequestNewBp", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product.Request")]
    [System.SerializableAttribute()]
    public partial class ProductRegistrationRequestNewBp : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brother.WebSites.Core.ProductRegistration.BusinessPartner BpDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brother.WebSites.Core.ProductRegistration.ProductRegisterationRequest ProductsDetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brother.WebSites.Core.ProductRegistration.BusinessPartner BpDetails {
            get {
                return this.BpDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.BpDetailsField, value) != true)) {
                    this.BpDetailsField = value;
                    this.RaisePropertyChanged("BpDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brother.WebSites.Core.ProductRegistration.ProductRegisterationRequest ProductsDetails {
            get {
                return this.ProductsDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsDetailsField, value) != true)) {
                    this.ProductsDetailsField = value;
                    this.RaisePropertyChanged("ProductsDetails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductRegisterationRequest", Namespace="http://schemas.datacontract.org/2004/07/BIE.CRM.Core.Data.Product.Request")]
    [System.SerializableAttribute()]
    public partial class ProductRegisterationRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessPartnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brother.WebSites.Core.ProductRegistration.DeviceToRegister DeviceToRegisterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesOrganisationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessPartnerId {
            get {
                return this.BusinessPartnerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessPartnerIdField, value) != true)) {
                    this.BusinessPartnerIdField = value;
                    this.RaisePropertyChanged("BusinessPartnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brother.WebSites.Core.ProductRegistration.DeviceToRegister DeviceToRegister {
            get {
                return this.DeviceToRegisterField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceToRegisterField, value) != true)) {
                    this.DeviceToRegisterField = value;
                    this.RaisePropertyChanged("DeviceToRegister");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesOrganisation {
            get {
                return this.SalesOrganisationField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesOrganisationField, value) != true)) {
                    this.SalesOrganisationField = value;
                    this.RaisePropertyChanged("SalesOrganisation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductRegistration.IProductRegistrationService")]
    public interface IProductRegistrationService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IProductRegistrationService/RegisterMultipleProductsNewBp")]
        void RegisterMultipleProductsNewBp(Brother.WebSites.Core.ProductRegistration.MultipleProductsRegistrationRequestNewBp request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IProductRegistrationService/RegisterMultipleProductsNewBp")]
        System.Threading.Tasks.Task RegisterMultipleProductsNewBpAsync(Brother.WebSites.Core.ProductRegistration.MultipleProductsRegistrationRequestNewBp request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IProductRegistrationService/RegisterMultipleProductsExistingBp" +
            "")]
        void RegisterMultipleProductsExistingBp(Brother.WebSites.Core.ProductRegistration.MultipleProductsRegisterationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IProductRegistrationService/RegisterMultipleProductsExistingBp" +
            "")]
        System.Threading.Tasks.Task RegisterMultipleProductsExistingBpAsync(Brother.WebSites.Core.ProductRegistration.MultipleProductsRegisterationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IProductRegistrationService/RegisterProductNewBp")]
        void RegisterProductNewBp(Brother.WebSites.Core.ProductRegistration.ProductRegistrationRequestNewBp request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IProductRegistrationService/RegisterProductNewBp")]
        System.Threading.Tasks.Task RegisterProductNewBpAsync(Brother.WebSites.Core.ProductRegistration.ProductRegistrationRequestNewBp request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IProductRegistrationService/RegisterProductExistingBp")]
        void RegisterProductExistingBp(Brother.WebSites.Core.ProductRegistration.ProductRegisterationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IProductRegistrationService/RegisterProductExistingBp")]
        System.Threading.Tasks.Task RegisterProductExistingBpAsync(Brother.WebSites.Core.ProductRegistration.ProductRegisterationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IProductRegistrationService/DeregisterProduct")]
        void DeregisterProduct(System.Guid deviceId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IProductRegistrationService/DeregisterProduct")]
        System.Threading.Tasks.Task DeregisterProductAsync(System.Guid deviceId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IProductRegistrationService/UpdateUserData")]
        void UpdateUserData(System.Guid UserId, string SapId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IProductRegistrationService/UpdateUserData")]
        System.Threading.Tasks.Task UpdateUserDataAsync(System.Guid UserId, string SapId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductRegistrationServiceChannel : Brother.WebSites.Core.ProductRegistration.IProductRegistrationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductRegistrationServiceClient : System.ServiceModel.ClientBase<Brother.WebSites.Core.ProductRegistration.IProductRegistrationService>, Brother.WebSites.Core.ProductRegistration.IProductRegistrationService {
        
        public ProductRegistrationServiceClient() {
        }
        
        public ProductRegistrationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductRegistrationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductRegistrationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductRegistrationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void RegisterMultipleProductsNewBp(Brother.WebSites.Core.ProductRegistration.MultipleProductsRegistrationRequestNewBp request) {
            base.Channel.RegisterMultipleProductsNewBp(request);
        }
        
        public System.Threading.Tasks.Task RegisterMultipleProductsNewBpAsync(Brother.WebSites.Core.ProductRegistration.MultipleProductsRegistrationRequestNewBp request) {
            return base.Channel.RegisterMultipleProductsNewBpAsync(request);
        }
        
        public void RegisterMultipleProductsExistingBp(Brother.WebSites.Core.ProductRegistration.MultipleProductsRegisterationRequest request) {
            base.Channel.RegisterMultipleProductsExistingBp(request);
        }
        
        public System.Threading.Tasks.Task RegisterMultipleProductsExistingBpAsync(Brother.WebSites.Core.ProductRegistration.MultipleProductsRegisterationRequest request) {
            return base.Channel.RegisterMultipleProductsExistingBpAsync(request);
        }
        
        public void RegisterProductNewBp(Brother.WebSites.Core.ProductRegistration.ProductRegistrationRequestNewBp request) {
            base.Channel.RegisterProductNewBp(request);
        }
        
        public System.Threading.Tasks.Task RegisterProductNewBpAsync(Brother.WebSites.Core.ProductRegistration.ProductRegistrationRequestNewBp request) {
            return base.Channel.RegisterProductNewBpAsync(request);
        }
        
        public void RegisterProductExistingBp(Brother.WebSites.Core.ProductRegistration.ProductRegisterationRequest request) {
            base.Channel.RegisterProductExistingBp(request);
        }
        
        public System.Threading.Tasks.Task RegisterProductExistingBpAsync(Brother.WebSites.Core.ProductRegistration.ProductRegisterationRequest request) {
            return base.Channel.RegisterProductExistingBpAsync(request);
        }
        
        public void DeregisterProduct(System.Guid deviceId) {
            base.Channel.DeregisterProduct(deviceId);
        }
        
        public System.Threading.Tasks.Task DeregisterProductAsync(System.Guid deviceId) {
            return base.Channel.DeregisterProductAsync(deviceId);
        }
        
        public void UpdateUserData(System.Guid UserId, string SapId) {
            base.Channel.UpdateUserData(UserId, SapId);
        }
        
        public System.Threading.Tasks.Task UpdateUserDataAsync(System.Guid UserId, string SapId) {
            return base.Channel.UpdateUserDataAsync(UserId, SapId);
        }
    }
}
