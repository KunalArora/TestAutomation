// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34209
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Brother.Tests.Specs.TestSpecifications.BrotherOnline.SiteAccess
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("AccessAllProductionSites")]
    [NUnit.Framework.CategoryAttribute("PROD")]
    public partial class AccessAllProductionSitesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SitesAccess_ProductionEnvironment.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AccessAllProductionSites", "In order to validate the status of a Websites on the Production environment\r\nAs a" +
                    " sanity check\r\nWe need to receive a 200 OK request back from a list of selected " +
                    "sites", ProgrammingLanguage.CSharp, new string[] {
                        "PROD"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get 200 OK response back from Brother Main Site \"<Country>\" on the LIVE environme" +
            "nt")]
        [NUnit.Framework.CategoryAttribute("SMOKE")]
        [NUnit.Framework.TestCaseAttribute("Ireland", "http://www.brother.ie/", null)]
        [NUnit.Framework.TestCaseAttribute("Germany", "http://www.brother.de/", null)]
        [NUnit.Framework.TestCaseAttribute("United Kingdom", "http://www.brother.co.uk/", null)]
        [NUnit.Framework.TestCaseAttribute("France", "http://www.brother.fr/", null)]
        [NUnit.Framework.TestCaseAttribute("Austria", "http://www.brother.at/", null)]
        [NUnit.Framework.TestCaseAttribute("Poland", "http://www.brother.pl/", null)]
        [NUnit.Framework.TestCaseAttribute("Switzerland", "http://www.brother.ch/", null)]
        [NUnit.Framework.TestCaseAttribute("Belgium", "http://www.brother.be/", null)]
        [NUnit.Framework.TestCaseAttribute("Italy", "http://www.brother.it/", null)]
        [NUnit.Framework.TestCaseAttribute("Netherlands", "http://www.brother.nl/", null)]
        [NUnit.Framework.TestCaseAttribute("Denmark", "http://www.brother.dk/", null)]
        [NUnit.Framework.TestCaseAttribute("Finland", "http://www.brother.fi/", null)]
        [NUnit.Framework.TestCaseAttribute("Norway", "http://www.brother.no/", null)]
        [NUnit.Framework.TestCaseAttribute("Sweden", "http://www.brother.se/", null)]
        [NUnit.Framework.TestCaseAttribute("Portugal", "http://www.brother.pt/", null)]
        [NUnit.Framework.TestCaseAttribute("Czech Republic", "http://www.brother.cz/", null)]
        [NUnit.Framework.TestCaseAttribute("Hungary", "http://www.brother.hu/", null)]
        [NUnit.Framework.TestCaseAttribute("Russia", "http://www.brother.ru/", null)]
        [NUnit.Framework.TestCaseAttribute("Bulgaria", "http://www.brother.bg/", null)]
        [NUnit.Framework.TestCaseAttribute("Romania", "http://www.brother.ro/", null)]
        [NUnit.Framework.TestCaseAttribute("Slovenia", "http://www.brother.si/", null)]
        [NUnit.Framework.TestCaseAttribute("Luxembourg", "http://www.brother.lu/", null)]
        public virtual void Get200OKResponseBackFromBrotherMainSiteCountryOnTheLIVEEnvironment(string country, string siteUrl, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SMOKE"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get 200 OK response back from Brother Main Site \"<Country>\" on the LIVE environme" +
                    "nt", @__tags);
#line 9
this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.Given(string.Format("The following site \"{0}\" to validate I should receive an Ok response back", siteUrl), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get 200 OK response back from Brother Online \"<Country>\" on the LIVE environment")]
        [NUnit.Framework.CategoryAttribute("SMOKE")]
        [NUnit.Framework.TestCaseAttribute("Ireland", "https://online.brother.ie/", null)]
        [NUnit.Framework.TestCaseAttribute("Spain", "https://online.brother.es/", null)]
        [NUnit.Framework.TestCaseAttribute("Poland", "https://online.brother.pl/", null)]
        [NUnit.Framework.TestCaseAttribute("France", "https://online.brother.fr/", null)]
        [NUnit.Framework.TestCaseAttribute("United Kingdom", "https://online.brother.co.uk/", null)]
        [NUnit.Framework.TestCaseAttribute("Germany", "https://online.brother.de/", null)]
        [NUnit.Framework.TestCaseAttribute("Switzerland", "https://online.brother.ch/", null)]
        [NUnit.Framework.TestCaseAttribute("Austria", "https://online.brother.at/", null)]
        [NUnit.Framework.TestCaseAttribute("Belgium", "https://online.brother.be/", null)]
        [NUnit.Framework.TestCaseAttribute("Italy", "https://online.brother.it/", null)]
        [NUnit.Framework.TestCaseAttribute("Netherlands", "https://online.brother.nl/", null)]
        [NUnit.Framework.TestCaseAttribute("Denmark", "https://online.brother.dk/", null)]
        [NUnit.Framework.TestCaseAttribute("Finland", "https://online.brother.fi/", null)]
        [NUnit.Framework.TestCaseAttribute("Norway", "https://online.brother.no/", null)]
        [NUnit.Framework.TestCaseAttribute("Sweden", "https://online.brother.se/", null)]
        [NUnit.Framework.TestCaseAttribute("Portugal", "https://online.brother.pt/", null)]
        [NUnit.Framework.TestCaseAttribute("Czech Republic", "https://online.brother.cz/", null)]
        [NUnit.Framework.TestCaseAttribute("Hungary", "https://online.brother.hu/", null)]
        [NUnit.Framework.TestCaseAttribute("Russia", "https://online.brother.ru/", null)]
        [NUnit.Framework.TestCaseAttribute("Bulgaria", "https://online.brother.bg/", null)]
        [NUnit.Framework.TestCaseAttribute("Romania", "https://online.brother.ro/", null)]
        [NUnit.Framework.TestCaseAttribute("Slovenia", "https://online.brother.si/", null)]
        [NUnit.Framework.TestCaseAttribute("Luxembourg", "https://online.brother.lu/", null)]
        public virtual void Get200OKResponseBackFromBrotherOnlineCountryOnTheLIVEEnvironment(string country, string siteUrl, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SMOKE"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get 200 OK response back from Brother Online \"<Country>\" on the LIVE environment", @__tags);
#line 39
this.ScenarioSetup(scenarioInfo);
#line 40
 testRunner.Given(string.Format("The following site \"{0}\" to validate I should receive an Ok response back", siteUrl), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get 200 OK response back from Web Conferencing \"<Country>\" on the LIVE environmen" +
            "t")]
        [NUnit.Framework.CategoryAttribute("SMOKE")]
        [NUnit.Framework.TestCaseAttribute("United Kingdom", "http://webconferencing.brother.co.uk/", null)]
        [NUnit.Framework.TestCaseAttribute("France", "http://webconference.brother.fr/", null)]
        [NUnit.Framework.TestCaseAttribute("Switzerland", "http://visioconference.brother.ch/", null)]
        [NUnit.Framework.TestCaseAttribute("Spain", "http://videoconferencia.brother.es/", null)]
        [NUnit.Framework.TestCaseAttribute("Ireland", "http://webconferencing.brother.ie/", null)]
        [NUnit.Framework.TestCaseAttribute("Germany", "http://videokonferenzen.brother.de/", null)]
        public virtual void Get200OKResponseBackFromWebConferencingCountryOnTheLIVEEnvironment(string country, string siteUrl, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SMOKE"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get 200 OK response back from Web Conferencing \"<Country>\" on the LIVE environmen" +
                    "t", @__tags);
#line 70
this.ScenarioSetup(scenarioInfo);
#line 71
 testRunner.Given(string.Format("The following site \"{0}\" to validate I should receive an Ok response back", siteUrl), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get 200 OK response back from Creative Centre \"<Country>\" on the LIVE environment" +
            "")]
        [NUnit.Framework.CategoryAttribute("SMOKE")]
        [NUnit.Framework.TestCaseAttribute("United Kingdom", "https://creativecenter.brother.eu", null)]
        public virtual void Get200OKResponseBackFromCreativeCentreCountryOnTheLIVEEnvironment(string country, string siteUrl, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SMOKE"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get 200 OK response back from Creative Centre \"<Country>\" on the LIVE environment" +
                    "", @__tags);
#line 84
this.ScenarioSetup(scenarioInfo);
#line 85
 testRunner.Given(string.Format("The following site \"{0}\" to validate I should receive an Ok response back", siteUrl), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
